if(0)
% Data Files
pressureFile = ['/Users/JonReal/Dropbox/Professional/UW_PHD/', ...
                'Prosthetic_Research/Data/PA_A01/Pedar_RAW/', ...
                'PA_ss_01.asc'];

viconData = ['/Users/JonReal/Dropbox/Professional/UW_PHD/', ...
             'Prosthetic_Research/Data/PA_A01/Data/PA_SS/', ...
             'PA_SS.mat'];

outputFile = '~/Desktop/animation';
load(viconData)

% Import grid
load cell_grid_points

% Centroids
l_x_centroid = X_points(1:99,5);
r_x_centroid = X_points(101:199,5);
l_y_centroid = Y_points(1:99,5);
r_y_centroid = Y_points(101:199,5);

% Interpolate insole data to match vicon
RAW = dlmread(pressureFile,'\t',7,0);
time = RAW(:,1);
time = time - time(1);
l_Pa = RAW(:,2:100);
r_Pa = RAW(:,101:end-1);

l_Pa = l_Pa./max(max(l_Pa));
r_Pa = r_Pa./max(max(r_Pa));

l_Pa = interp1(time,l_Pa,PA_SS.time);
r_Pa = interp1(time,r_Pa,PA_SS.time);

% Interpolate Pressure Data
l_thres = 0.10;
r_thres = 0.10;

if(1)
figure;
  plot(PA_SS.time(1:1000),l_Pa(1:1000,:))
figure;
  plot(PA_SS.time(1:1000),r_Pa(1:1000,:))
end

l_Pa = l_Pa - l_thres;
l_Pa(l_Pa < 0) = 0;
l_Pa = l_Pa./max(max(l_Pa));

r_Pa = r_Pa - r_thres;
r_Pa(r_Pa < 0) = 0;
r_Pa = r_Pa./max(max(r_Pa));

if(1)
figure;
  plot(PA_SS.time(1:1000),l_Pa(1:1000,:))
figure;
  plot(PA_SS.time(1:1000),r_Pa(1:1000,:))
end

% COP Function
xycop_func =@(x,y,Pa) [sum(x.*Pa)/sum(Pa),sum(y.*Pa)/sum(Pa)];


% Interpolate
if 1
  % Grid Size
  n_xgrid = 75;
  n_ygrid = 250;

  % Make uniform grid
  l_xgv = linspace(min(l_x_centroid)-10,max(l_x_centroid)+10,n_xgrid);
  l_ygv = linspace(min(l_y_centroid)-10,max(l_y_centroid)+10,n_ygrid);
  r_xgv = linspace(min(r_x_centroid)-10,max(r_x_centroid)+10,n_xgrid);
  r_ygv = linspace(min(r_y_centroid)-10,max(r_y_centroid)+10,n_ygrid);
  [l_X,l_Y] = meshgrid(l_xgv,l_ygv);
  [r_X,r_Y] = meshgrid(r_xgv,r_ygv);

  % Allocate vectors
  l_Pa_intrp = nan*zeros([length(l_Pa),size(l_X)]);
  r_Pa_intrp = nan*zeros([length(r_Pa),size(r_Y)]);
  l_xy_cop = nan*zeros(length(l_Pa),2);
  r_xy_cop = nan*zeros(length(r_Pa),2);
  l_xy_q_cop = nan*zeros(length(l_Pa),2);
  r_xy_q_cop = nan*zeros(length(r_Pa),2);

  % Choose query points in/on polygon
  [In, On] = inpolygon(l_X,l_Y,left_polygon(:,1),left_polygon(:,2));
  l_q_indx = [find(In); find(On)];
  l_x_q = l_X(l_q_indx);
  l_y_q = l_Y(l_q_indx);

  [In, On] = inpolygon(r_X,r_Y,right_polygon(:,1),right_polygon(:,2));
  r_q_indx = [find(In); find(On)];
  r_x_q = r_X(r_q_indx);
  r_y_q = r_Y(r_q_indx);

  % Interpolating Functions
  left_F = scatteredInterpolant(l_x_centroid, ...
                                l_y_centroid, ...
                                l_Pa(1,:)');
  left_F.Method = 'natural';
  left_F.ExtrapolationMethod = 'linear';
  right_F = scatteredInterpolant(r_x_centroid, ...
                                 r_y_centroid, ...
                                 r_Pa(1,:)');
  right_F.Method = 'natural';
  right_F.ExtrapolationMethod = 'linear';

  % Interpolate
  textprogressbar('Interpolating:   ')
  for i=1:length(l_Pa)
    left_F.Values = l_Pa(i,:)';
    right_F.Values = r_Pa(i,:)';

    l_Pa_q = left_F(l_x_q,l_y_q);
    r_Pa_q = right_F(r_x_q,r_y_q);

    l_Pa_intrp(i,l_q_indx) = l_Pa_q;
    r_Pa_intrp(i,r_q_indx) = r_Pa_q;

    % Calcluate COP from centroid data and interpolated data
    l_xy_cop(i,:) = xycop_func(l_x_centroid,l_y_centroid,l_Pa(i,:)');
    r_xy_cop(i,:) = xycop_func(r_x_centroid,r_y_centroid,r_Pa(i,:)');

    textprogressbar(round(i/length(l_Pa)*100));
  end
  textprogressbar('')
end
end

S = PA_SS;


% Animation
if 1
  % Plotting
  fh = figure;
  drawnow
  pause(0.011)

  % Video
  if 1
    writerObj = VideoWriter(outputFile)
    writerObj.Quality = 100;
    open(writerObj);
  end

  for i=1:numel(l_Pa(:,1))
    figure(fh), clf, hold all
    subplot(3,3,[3,6,9]), hold all
    % Plot bounding polygons
    left_poly_plot = [left_polygon; left_polygon(1,:)];
    right_poly_plot = [right_polygon; right_polygon(1,:)];
    line(left_poly_plot(:,1),left_poly_plot(:,2),'Color','k')
    line(right_poly_plot(:,1),right_poly_plot(:,2),'Color','k')

    % Contours
    contourf(l_X,l_Y,reshape(l_Pa_intrp(i,:),n_ygrid,n_xgrid));
    contourf(r_X,r_Y,reshape(r_Pa_intrp(i,:),n_ygrid,n_xgrid));

    % Plot COP
%    plot(l_xy_cop(i,1),l_xy_cop(i,2),'k*','MarkerSize',15), hold on
%    plot(r_xy_cop(i,1),r_xy_cop(i,2),'k*','MarkerSize',15)

    axis equal
    set(gca, 'XTick', []);
    set(gca, 'YTick', []);
  %  caxis(c_min_max)
  %  colorbar('location','EastOutside')
    box off
    axis off

    figure(fh),
    subplot(3,3,[1,2,4,5,7,8]), hold all
    plot3(S.Markers.CentreOfMass.X(i), ...
          S.Markers.CentreOfMass.Y(i), ...
          S.Markers.CentreOfMass.Z(i),'ro','MarkerSize',10), hold on

    % Right Leg
    plot3([S.Markers.RTOE.X(i), S.Markers.RHEE.X(i)], ...
          [S.Markers.RTOE.Y(i), S.Markers.RHEE.Y(i)], ...
          [S.Markers.RTOE.Z(i), S.Markers.RHEE.Z(i)], 'ko-', ...
          [S.Markers.RTOE.X(i), S.Markers.RANK.X(i)], ...
          [S.Markers.RTOE.Y(i), S.Markers.RANK.Y(i)], ...
          [S.Markers.RTOE.Z(i), S.Markers.RANK.Z(i)], 'ko-', ...
          [S.Markers.RHEE.X(i), S.Markers.RANK.X(i)], ...
          [S.Markers.RHEE.Y(i), S.Markers.RANK.Y(i)], ...
          [S.Markers.RHEE.Z(i), S.Markers.RANK.Z(i)], 'ko-', ...
          [S.Markers.RANK.X(i), S.Markers.RKNE.X(i)], ...
          [S.Markers.RANK.Y(i), S.Markers.RKNE.Y(i)], ...
          [S.Markers.RANK.Z(i), S.Markers.RKNE.Z(i)], 'ko-', ...
          [S.Markers.RTOE.X(i), S.Markers.RHEE.X(i)], ...
          [S.Markers.RTOE.Y(i), S.Markers.RHEE.Y(i)], ...
          [S.Markers.RTOE.Z(i), S.Markers.RHEE.Z(i)], 'ko-', ...
          [S.Markers.RPSI.X(i), S.Markers.RASI.X(i)], ...
          [S.Markers.RPSI.Y(i), S.Markers.RASI.Y(i)], ...
          [S.Markers.RPSI.Z(i), S.Markers.RASI.Z(i)], 'ko-', ...
          [S.Markers.RPSI.X(i), S.Markers.RKNE.X(i)], ...
          [S.Markers.RPSI.Y(i), S.Markers.RKNE.Y(i)], ...
          [S.Markers.RPSI.Z(i), S.Markers.RKNE.Z(i)], 'ko-', ...
          [S.Markers.RKNE.X(i), S.Markers.RASI.X(i)], ...
          [S.Markers.RKNE.Y(i), S.Markers.RASI.Y(i)], ...
          [S.Markers.RKNE.Z(i), S.Markers.RASI.Z(i)], 'ko-', ...
          [S.Markers.RKNE.X(i), S.Markers.RHEE.X(i)], ...
          [S.Markers.RKNE.Y(i), S.Markers.RHEE.Y(i)], ...
          [S.Markers.RKNE.Z(i), S.Markers.RHEE.Z(i)], 'ko-')

    % Left Leg
    plot3([S.Markers.LTOE.X(i), S.Markers.LHEE.X(i)], ...
          [S.Markers.LTOE.Y(i), S.Markers.LHEE.Y(i)], ...
          [S.Markers.LTOE.Z(i), S.Markers.LHEE.Z(i)], 'ko-', ...
          [S.Markers.LTOE.X(i), S.Markers.LANK.X(i)], ...
          [S.Markers.LTOE.Y(i), S.Markers.LANK.Y(i)], ...
          [S.Markers.LTOE.Z(i), S.Markers.LANK.Z(i)], 'ko-', ...
          [S.Markers.LHEE.X(i), S.Markers.LANK.X(i)], ...
          [S.Markers.LHEE.Y(i), S.Markers.LANK.Y(i)], ...
          [S.Markers.LHEE.Z(i), S.Markers.LANK.Z(i)], 'ko-', ...
          [S.Markers.LANK.X(i), S.Markers.LKNE.X(i)], ...
          [S.Markers.LANK.Y(i), S.Markers.LKNE.Y(i)], ...
          [S.Markers.LANK.Z(i), S.Markers.LKNE.Z(i)], 'ko-', ...
          [S.Markers.LTOE.X(i), S.Markers.LHEE.X(i)], ...
          [S.Markers.LTOE.Y(i), S.Markers.LHEE.Y(i)], ...
          [S.Markers.LTOE.Z(i), S.Markers.LHEE.Z(i)], 'ko-', ...
          [S.Markers.LPSI.X(i), S.Markers.LASI.X(i)], ...
          [S.Markers.LPSI.Y(i), S.Markers.LASI.Y(i)], ...
          [S.Markers.LPSI.Z(i), S.Markers.LASI.Z(i)], 'ko-', ...
          [S.Markers.LPSI.X(i), S.Markers.LKNE.X(i)], ...
          [S.Markers.LPSI.Y(i), S.Markers.LKNE.Y(i)], ...
          [S.Markers.LPSI.Z(i), S.Markers.LKNE.Z(i)], 'ko-', ...
          [S.Markers.LKNE.X(i), S.Markers.LASI.X(i)], ...
          [S.Markers.LKNE.Y(i), S.Markers.LASI.Y(i)], ...
          [S.Markers.LKNE.Z(i), S.Markers.LASI.Z(i)], 'ko-', ...
          [S.Markers.LKNE.X(i), S.Markers.LHEE.X(i)], ...
          [S.Markers.LKNE.Y(i), S.Markers.LHEE.Y(i)], ...
          [S.Markers.LKNE.Z(i), S.Markers.LHEE.Z(i)], 'ko-')

    % Right Arm
    plot3([S.Markers.RWRA.X(i), S.Markers.RWRB.X(i)], ...
          [S.Markers.RWRA.Y(i), S.Markers.RWRB.Y(i)], ...
          [S.Markers.RWRA.Z(i), S.Markers.RWRB.Z(i)], 'ko-', ...
          [S.Markers.RSHO.X(i), S.Markers.RELB.X(i)], ...
          [S.Markers.RSHO.Y(i), S.Markers.RELB.Y(i)], ...
          [S.Markers.RSHO.Z(i), S.Markers.RELB.Z(i)], 'ko-', ...
          [S.Markers.RWRA.X(i), S.Markers.RELB.X(i)], ...
          [S.Markers.RWRA.Y(i), S.Markers.RELB.Y(i)], ...
          [S.Markers.RWRA.Z(i), S.Markers.RELB.Z(i)], 'ko-', ...
          [S.Markers.RWRB.X(i), S.Markers.RELB.X(i)], ...
          [S.Markers.RWRB.Y(i), S.Markers.RELB.Y(i)], ...
          [S.Markers.RWRB.Z(i), S.Markers.RELB.Z(i)], 'ko-', ...
          [S.Markers.RFIN.X(i), S.Markers.RWRB.X(i)], ...
          [S.Markers.RFIN.Y(i), S.Markers.RWRB.Y(i)], ...
          [S.Markers.RFIN.Z(i), S.Markers.RWRB.Z(i)], 'ko-', ...
          [S.Markers.RFIN.X(i), S.Markers.RWRA.X(i)], ...
          [S.Markers.RFIN.Y(i), S.Markers.RWRA.Y(i)], ...
          [S.Markers.RFIN.Z(i), S.Markers.RWRA.Z(i)], 'ko-')


    % Left Arm
    plot3([S.Markers.LWRA.X(i), S.Markers.LWRB.X(i)], ...
          [S.Markers.LWRA.Y(i), S.Markers.LWRB.Y(i)], ...
          [S.Markers.LWRA.Z(i), S.Markers.LWRB.Z(i)], 'ko-', ...
          [S.Markers.LSHO.X(i), S.Markers.LELB.X(i)], ...
          [S.Markers.LSHO.Y(i), S.Markers.LELB.Y(i)], ...
          [S.Markers.LSHO.Z(i), S.Markers.LELB.Z(i)], 'ko-', ...
          [S.Markers.LWRA.X(i), S.Markers.LELB.X(i)], ...
          [S.Markers.LWRA.Y(i), S.Markers.LELB.Y(i)], ...
          [S.Markers.LWRA.Z(i), S.Markers.LELB.Z(i)], 'ko-', ...
          [S.Markers.LWRB.X(i), S.Markers.LELB.X(i)], ...
          [S.Markers.LWRB.Y(i), S.Markers.LELB.Y(i)], ...
          [S.Markers.LWRB.Z(i), S.Markers.LELB.Z(i)], 'ko-', ...
          [S.Markers.LFIN.X(i), S.Markers.LWRB.X(i)], ...
          [S.Markers.LFIN.Y(i), S.Markers.LWRB.Y(i)], ...
          [S.Markers.LFIN.Z(i), S.Markers.LWRB.Z(i)], 'ko-', ...
          [S.Markers.LFIN.X(i), S.Markers.LWRA.X(i)], ...
          [S.Markers.LFIN.Y(i), S.Markers.LWRA.Y(i)], ...
          [S.Markers.LFIN.Z(i), S.Markers.LWRA.Z(i)], 'ko-')

    % Head, back, chest
    plot3([S.Markers.RFHD.X(i), S.Markers.LFHD.X(i)], ...
          [S.Markers.RFHD.Y(i), S.Markers.LFHD.Y(i)], ...
          [S.Markers.RFHD.Z(i), S.Markers.LFHD.Z(i)], 'ko-', ...
          [S.Markers.RBHD.X(i), S.Markers.LBHD.X(i)], ...
          [S.Markers.RBHD.Y(i), S.Markers.LBHD.Y(i)], ...
          [S.Markers.RBHD.Z(i), S.Markers.LBHD.Z(i)], 'ko-', ...
          [S.Markers.RBHD.X(i), S.Markers.LFHD.X(i)], ...
          [S.Markers.RBHD.Y(i), S.Markers.LFHD.Y(i)], ...
          [S.Markers.RBHD.Z(i), S.Markers.LFHD.Z(i)], 'ko-', ...
          [S.Markers.RFHD.X(i), S.Markers.LBHD.X(i)], ...
          [S.Markers.RFHD.Y(i), S.Markers.LBHD.Y(i)], ...
          [S.Markers.RFHD.Z(i), S.Markers.LBHD.Z(i)], 'ko-', ...
          [S.Markers.RFHD.X(i), S.Markers.RBHD.X(i)], ...
          [S.Markers.RFHD.Y(i), S.Markers.RBHD.Y(i)], ...
          [S.Markers.RFHD.Z(i), S.Markers.RBHD.Z(i)], 'ko-', ...
          [S.Markers.LFHD.X(i), S.Markers.LBHD.X(i)], ...
          [S.Markers.LFHD.Y(i), S.Markers.LBHD.Y(i)], ...
          [S.Markers.LFHD.Z(i), S.Markers.LBHD.Z(i)], 'ko-', ...
          [S.Markers.C7.X(i), S.Markers.T10.X(i)], ...
          [S.Markers.C7.Y(i), S.Markers.T10.Y(i)], ...
          [S.Markers.C7.Z(i), S.Markers.T10.Z(i)], 'ko-', ...
          [S.Markers.CLAV.X(i), S.Markers.STRN.X(i)], ...
          [S.Markers.CLAV.Y(i), S.Markers.STRN.Y(i)], ...
          [S.Markers.CLAV.Z(i), S.Markers.STRN.Z(i)], 'ko-', ...
          [S.Markers.CLAV.X(i), S.Markers.C7.X(i)], ...
          [S.Markers.CLAV.Y(i), S.Markers.C7.Y(i)], ...
          [S.Markers.CLAV.Z(i), S.Markers.C7.Z(i)], 'ko-', ...
          [S.Markers.T10.X(i), S.Markers.STRN.X(i)], ...
          [S.Markers.T10.Y(i), S.Markers.STRN.Y(i)], ...
          [S.Markers.T10.Z(i), S.Markers.STRN.Z(i)], 'ko-')

    % Trunk Connect
    plot3([S.Markers.T10.X(i), S.Markers.LPSI.X(i)], ...
          [S.Markers.T10.Y(i), S.Markers.LPSI.Y(i)], ...
          [S.Markers.T10.Z(i), S.Markers.LPSI.Z(i)], 'ko-', ...
          [S.Markers.T10.X(i), S.Markers.LASI.X(i)], ...
          [S.Markers.T10.Y(i), S.Markers.LASI.Y(i)], ...
          [S.Markers.T10.Z(i), S.Markers.LASI.Z(i)], 'ko-', ...
          [S.Markers.T10.X(i), S.Markers.RPSI.X(i)], ...
          [S.Markers.T10.Y(i), S.Markers.RPSI.Y(i)], ...
          [S.Markers.T10.Z(i), S.Markers.RPSI.Z(i)], 'ko-', ...
          [S.Markers.T10.X(i), S.Markers.RASI.X(i)], ...
          [S.Markers.T10.Y(i), S.Markers.RASI.Y(i)], ...
          [S.Markers.T10.Z(i), S.Markers.RASI.Z(i)], 'ko-', ...
          [S.Markers.C7.X(i), S.Markers.RSHO.X(i)], ...
          [S.Markers.C7.Y(i), S.Markers.RSHO.Y(i)], ...
          [S.Markers.C7.Z(i), S.Markers.RSHO.Z(i)], 'ko-', ...
          [S.Markers.C7.X(i), S.Markers.LSHO.X(i)], ...
          [S.Markers.C7.Y(i), S.Markers.LSHO.Y(i)], ...
          [S.Markers.C7.Z(i), S.Markers.LSHO.Z(i)], 'ko-', ...
          [S.Markers.CLAV.X(i), S.Markers.RSHO.X(i)], ...
          [S.Markers.CLAV.Y(i), S.Markers.RSHO.Y(i)], ...
          [S.Markers.CLAV.Z(i), S.Markers.RSHO.Z(i)], 'ko-', ...
          [S.Markers.CLAV.X(i), S.Markers.LSHO.X(i)], ...
          [S.Markers.CLAV.Y(i), S.Markers.LSHO.Y(i)], ...
          [S.Markers.CLAV.Z(i), S.Markers.LSHO.Z(i)], 'ko-', ...
          [S.Markers.C7.X(i), S.Markers.RBHD.X(i)], ...
          [S.Markers.C7.Y(i), S.Markers.RBHD.Y(i)], ...
          [S.Markers.C7.Z(i), S.Markers.RBHD.Z(i)], 'ko-', ...
          [S.Markers.C7.X(i), S.Markers.LBHD.X(i)], ...
          [S.Markers.C7.Y(i), S.Markers.LBHD.Y(i)], ...
          [S.Markers.C7.Z(i), S.Markers.LBHD.Z(i)], 'ko-')

    axis equal
    xlim([-800,800])
    ylim([100,2000])
    zlim([0,1700])
    box off
    axis off
    title([sprintf('%0.2f', S.time(i)), ' (s)'], ...
          'FontSize', 20,'interpreter','none')
%    view(az,el);
    set(gca,'xtick',[])
    set(gca,'xticklabel',[])
    set(gca,'ytick',[])
    set(gca,'yticklabel',[])
    set(gca,'ztick',[])
    set(gca,'zticklabel',[])
    XL = get(gca, 'XLim');
    YL = get(gca, 'YLim');

    size([XL(1), XL(2), XL(2), XL(1)]);
    size([YL(1), YL(1), YL(2), YL(2)]);
    patch([XL(1), XL(2), XL(2), XL(1)], [YL(1), YL(1), YL(2), YL(2)], ...
          [0 0 0 0], 'FaceColor', [0.9 0.9 0.9]);
    view(3)

    set(gcf,'color','w');
    drawnow

    % Movie
    if 1
      writeVideo(writerObj,getframe(fh));
    end

  end
  if 1
    close(writerObj)
  end

end



